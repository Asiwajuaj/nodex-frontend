import { useState } from 'react';
import type { NextPage } from 'next';
import Head from 'next/head';
import { useReadContract } from 'wagmi';
import { CONTRACT_ABI, CONTRACT_ADDRESS } from '../constant/constant';

// Define a type for the token details return value
type TokenDetails = [string, string, string]; // [name, symbol, totalSupply]

const Home: NextPage = () => {
  const { data, error, isLoading } = useReadContract({
    abi: CONTRACT_ABI,
    address: CONTRACT_ADDRESS,
    functionName: 'getTokenDetails',
  });

  // Cast the data to the TokenDetails type
  const tokenDetails = data as TokenDetails | undefined;

  if (isLoading) {
    return <p>Loading...</p>;
  }

  if (error) {
    return <p>Error: {error.message}</p>;
  }

  console.log(tokenDetails, 'tokenDetails');

  return (
    <div className="min-h-screen flex flex-col items-center justify-center bg-gray-100">
      <Head>
        <title>Node X App</title>
        <meta content="Generated by @rainbow-me/create-rainbowkit" name="description" />
        <link href="/favicon.ico" rel="icon" />
      </Head>

      <div className="w-full max-w-md p-8 bg-white rounded-lg shadow-md">
        <h2 className="text-2xl font-semibold text-center text-gray-800 mb-6">Token Details</h2>
        <div className="space-y-4">
          <div>
            <label className="block text-sm font-medium text-gray-700">Token Name:</label>
            <p className="mt-1 p-2 border border-gray-300 rounded-md bg-gray-50">
              {tokenDetails ? tokenDetails[1] : 'N/A'}
            </p>
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700">Token Symbol:</label>
            <p className="mt-1 p-2 border border-gray-300 rounded-md bg-gray-50">
              {tokenDetails ? tokenDetails[0] : 'N/A'}
            </p>
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700">Total Supply:</label>
            <p className="mt-1 p-2 border border-gray-300 rounded-md bg-gray-50">
              {tokenDetails ? Number(tokenDetails[2]).toLocaleString() : 'N/A'}
            </p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Home;
